{"ast":null,"code":"var _jsxFileName = \"/Users/hey/Desktop/Untitled/src/components/reports/Projectswithchart.js\";\nimport React, { useContext } from \"react\";\nimport { Table, Row, Col } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { reportsContext } from \"../../context/reportsCtx\";\nChartJS.register(ArcElement, Tooltip, Legend);\n\nfunction Projectswithchart() {\n  const _useContext = useContext(reportsContext),\n        projects = _useContext.projects,\n        gateways = _useContext.gateways,\n        reports = _useContext.reports,\n        totalAmount = _useContext.totalAmount;\n\n  const productsPrices = projects.map(project => {\n    let currentAmount = 0;\n    reports.map(report => {\n      if (project.projectId === report.projectId) {\n        currentAmount += report.amount;\n      }\n    });\n    return currentAmount;\n  });\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  const chartData = {\n    labels: projects.map(project => project.name),\n    datasets: [{\n      label: \"# of Votes\",\n      data: productsPrices.map(price => price * 100 / totalAmount),\n      backgroundColor: projects.map(() => \"rgba(\".concat(getRandomInt(255), \", \").concat(getRandomInt(255), \", \").concat(getRandomInt(255), \", 0.2)\")),\n      borderColor: projects.map(() => \"rgba(\".concat(getRandomInt(255), \", \").concat(getRandomInt(255), \", \").concat(getRandomInt(255), \", 1)\")),\n      borderWidth: 1\n    }]\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"accordion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, projects && projects.map(project => React.createElement(\"div\", {\n    className: \"card\",\n    key: project.projectId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    id: \"headingOne\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#\".concat(project.projectId),\n    \"aria-expanded\": \"true\",\n    \"aria-controls\": \"\".concat(project.projectId),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row justify-content-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"mb-0 ml-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, project.name), React.createElement(\"h5\", {\n    className: \"mr-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"TOTAL:\", \" \", reports && reports.filter(report => report.projectId === project.projectId).reduce((prev, curr) => Math.round((prev + curr.amount) * 100) / 100, 0), \" \", \"USD\"))), React.createElement(\"div\", {\n    id: \"\".concat(project.projectId),\n    className: \"collapse hide\",\n    \"aria-labelledby\": \"headingOne\",\n    \"data-parent\": \"#accordion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Table, {\n    striped: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Date\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Gateway\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Transaction ID\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Amount\"))), reports && reports.filter(report => project.projectId === report.projectId).map(filteredReport => React.createElement(\"tbody\", {\n    key: filteredReport.paymentId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, filteredReport.created), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, gateways && gateways.find(gateway => gateway.gatewayId === filteredReport.gatewayId).name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"a732b\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, filteredReport.amount, \" USD\"))))))))))), React.createElement(Col, {\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Doughnut, {\n    data: chartData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))));\n}\n\nexport default Projectswithchart;","map":{"version":3,"sources":["/Users/hey/Desktop/Untitled/src/components/reports/Projectswithchart.js"],"names":["React","useContext","Table","Row","Col","Chart","ChartJS","ArcElement","Tooltip","Legend","Doughnut","reportsContext","register","Projectswithchart","projects","gateways","reports","totalAmount","productsPrices","map","project","currentAmount","report","projectId","amount","getRandomInt","max","Math","floor","random","chartData","labels","name","datasets","label","data","price","backgroundColor","borderColor","borderWidth","filter","reduce","prev","curr","round","filteredReport","paymentId","created","find","gateway","gatewayId"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { Table, Row, Col } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nimport { reportsContext } from \"../../context/reportsCtx\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nfunction Projectswithchart() {\n  const { projects, gateways, reports, totalAmount } = useContext(\n    reportsContext\n  );\n\n  const productsPrices = projects.map((project) => {\n    let currentAmount = 0;\n    reports.map((report) => {\n      if (project.projectId === report.projectId) {\n        currentAmount += report.amount;\n      }\n    });\n    return currentAmount;\n  });\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  const chartData = {\n    labels: projects.map((project) => project.name),\n    datasets: [\n      {\n        label: \"# of Votes\",\n        data: productsPrices.map((price) => (price * 100) / totalAmount),\n        backgroundColor: projects.map(\n          () =>\n            `rgba(${getRandomInt(255)}, ${getRandomInt(255)}, ${getRandomInt(\n              255\n            )}, 0.2)`\n        ),\n        borderColor: projects.map(\n          () =>\n            `rgba(${getRandomInt(255)}, ${getRandomInt(255)}, ${getRandomInt(\n              255\n            )}, 1)`\n        ),\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <>\n      <Row>\n        <Col xs={6}>\n          <div id=\"accordion\">\n            {projects &&\n              projects.map((project) => (\n                <div className=\"card\" key={project.projectId}>\n                  <div\n                    className=\"card-header\"\n                    id=\"headingOne\"\n                    data-toggle=\"collapse\"\n                    data-target={`#${project.projectId}`}\n                    aria-expanded=\"true\"\n                    aria-controls={`${project.projectId}`}\n                  >\n                    <div className=\"row justify-content-between\">\n                      <h5 className=\"mb-0 ml-4\">{project.name}</h5>\n                      <h5 className=\"mr-4\">\n                        TOTAL:{\" \"}\n                        {reports &&\n                          reports\n                            .filter(\n                              (report) => report.projectId === project.projectId\n                            )\n                            .reduce(\n                              (prev, curr) =>\n                                Math.round((prev + curr.amount) * 100) / 100,\n                              0\n                            )}{\" \"}\n                        USD\n                      </h5>\n                    </div>\n                  </div>\n\n                  <div\n                    id={`${project.projectId}`}\n                    className=\"collapse hide\"\n                    aria-labelledby=\"headingOne\"\n                    data-parent=\"#accordion\"\n                  >\n                    <div className=\"card-body\">\n                      <Table striped>\n                        <thead>\n                          <tr>\n                            <th>Date</th>\n                            <th>Gateway</th>\n                            <th>Transaction ID</th>\n                            <th>Amount</th>\n                          </tr>\n                        </thead>\n\n                        {reports &&\n                          reports\n                            .filter(\n                              (report) => project.projectId === report.projectId\n                            )\n                            .map((filteredReport) => (\n                              <tbody key={filteredReport.paymentId}>\n                                <tr>\n                                  <th scope=\"row\">{filteredReport.created}</th>\n                                  <td>\n                                    {gateways &&\n                                      gateways.find(\n                                        (gateway) =>\n                                          gateway.gatewayId ===\n                                          filteredReport.gatewayId\n                                      ).name}\n                                  </td>\n                                  <td>a732b</td>\n                                  <td>{filteredReport.amount} USD</td>\n                                </tr>\n                              </tbody>\n                            ))}\n                      </Table>\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </Col>\n        <Col xs={6}>\n          <Doughnut data={chartData} />\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default Projectswithchart;\n"]},"metadata":{},"sourceType":"module"}