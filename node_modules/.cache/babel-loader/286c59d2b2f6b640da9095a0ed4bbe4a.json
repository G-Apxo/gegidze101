{"ast":null,"code":"import _slicedToArray from \"/Users/hey/Desktop/Untitled/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hey/Desktop/Untitled/src/components/reports/ReportsHeader.js\";\nimport React, { useRef, useState, useEffect, useContext } from \"react\";\nimport { Col, Row, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Button } from \"reactstrap\";\nimport { reportsContext } from \"../../context/reportsCtx\";\n\nfunction ReportsHeader() {\n  const projectRef = useRef();\n  const gatewayRef = useRef();\n  const fromDateRef = useRef();\n  const toDateRef = useRef();\n\n  const _useContext = useContext(reportsContext),\n        setProjects = _useContext.setProjects,\n        setGateways = _useContext.setGateways,\n        setReports = _useContext.setReports;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allProjects = _useState2[0],\n        setAllProjects = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        allGateways = _useState4[0],\n        setAllGateways = _useState4[1];\n\n  useEffect(() => {\n    fetch(\"http://178.63.13.157:8090/mock-api/api/projects\").then(res => res.json()).then(result => setAllProjects(result.data)).catch(err => {\n      console.log(err);\n    });\n    fetch(\"http://178.63.13.157:8090/mock-api/api/gateways\").then(res => res.json()).then(result => setAllGateways(result.data)).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const onFormSubmmit = e => {\n    e.preventDefault();\n    const formData = {\n      projectId: projectRef.current.value,\n      gatewayId: gatewayRef.current.value,\n      from: fromDateRef.current.value,\n      to: toDateRef.current.value\n    };\n    console.log(formData);\n\n    if (projectRef.current.value) {\n      setProjects(allProjects.filter(project => project.projectId === projectRef.current.value));\n    } else {\n      setProjects(allProjects);\n    }\n\n    if (gatewayRef.current.value) {\n      setGateways(allProjects.filter(project => project.gatewayIds === gatewayRef.current.value));\n    } else {\n      setGateways(allGateways);\n    }\n\n    fetch(\"http://178.63.13.157:8090/mock-api/api/report\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(result => setReports(result.data)).catch(err => console.log(err));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Reports\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Easily generate a report of your transactions\")), React.createElement(Col, {\n    xs: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Row, {\n    className: \"justify-content-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: e => onFormSubmmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    ref: projectRef,\n    className: \"mr-2 dropdownheader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"All projects\"), allProjects && allProjects.map(project => React.createElement(\"option\", {\n    key: project.projectId,\n    value: project.projectId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, project.name))), React.createElement(\"select\", {\n    ref: gatewayRef,\n    className: \"mr-2 dropdownheader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"All gateways\"), allGateways && allGateways.map(gateway => React.createElement(\"option\", {\n    key: gateway.gatewayId,\n    value: gateway.gatewayId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, gateway.name))), React.createElement(\"input\", {\n    type: \"date\",\n    placeholder: \"from date\",\n    ref: fromDateRef,\n    className: \"mr-2 buttonheader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"date\",\n    placeholder: \"to date\",\n    ref: toDateRef,\n    className: \"mr-2 buttonheader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"mr-2 generatebtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Generate report\"))))));\n}\n\nexport default ReportsHeader;","map":{"version":3,"sources":["/Users/hey/Desktop/Untitled/src/components/reports/ReportsHeader.js"],"names":["React","useRef","useState","useEffect","useContext","Col","Row","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Button","reportsContext","ReportsHeader","projectRef","gatewayRef","fromDateRef","toDateRef","setProjects","setGateways","setReports","allProjects","setAllProjects","allGateways","setAllGateways","fetch","then","res","json","result","data","catch","err","console","log","onFormSubmmit","e","preventDefault","formData","projectId","current","value","gatewayId","from","to","filter","project","gatewayIds","method","body","JSON","stringify","headers","map","name","gateway"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useContext } from \"react\";\nimport {\n  Col,\n  Row,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n} from \"reactstrap\";\n\nimport { reportsContext } from \"../../context/reportsCtx\";\n\nfunction ReportsHeader() {\n  const projectRef = useRef();\n  const gatewayRef = useRef();\n  const fromDateRef = useRef();\n  const toDateRef = useRef();\n\n  const { setProjects, setGateways, setReports } = useContext(reportsContext);\n\n  const [allProjects, setAllProjects] = useState([]);\n  const [allGateways, setAllGateways] = useState([]);\n\n  useEffect(() => {\n    fetch(`http://178.63.13.157:8090/mock-api/api/projects`)\n      .then((res) => res.json())\n      .then((result) => setAllProjects(result.data))\n      .catch((err) => {\n        console.log(err);\n      });\n    fetch(`http://178.63.13.157:8090/mock-api/api/gateways`)\n      .then((res) => res.json())\n      .then((result) => setAllGateways(result.data))\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const onFormSubmmit = (e) => {\n    e.preventDefault();\n\n    const formData = {\n      projectId: projectRef.current.value,\n      gatewayId: gatewayRef.current.value,\n      from: fromDateRef.current.value,\n      to: toDateRef.current.value,\n    };\n\n    console.log(formData);\n\n    if (projectRef.current.value) {\n      setProjects(\n        allProjects.filter(\n          (project) => project.projectId === projectRef.current.value\n        )\n      );\n    } else {\n      setProjects(allProjects);\n    }\n\n    if (gatewayRef.current.value) {\n      setGateways(\n        allProjects.filter(\n          (project) => project.gatewayIds === gatewayRef.current.value\n        )\n      );\n    } else {\n      setGateways(allGateways);\n    }\n\n    fetch(`http://178.63.13.157:8090/mock-api/api/report`, {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: { \"content-type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((result) => setReports(result.data))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col xs={4}>\n          <h2>Reports</h2>\n          <p>Easily generate a report of your transactions</p>\n        </Col>\n        <Col xs={8}>\n          <Row className=\"justify-content-end\">\n            <form onSubmit={(e) => onFormSubmmit(e)}>\n              <select ref={projectRef} className=\"mr-2 dropdownheader\">\n                <option value=\"\">All projects</option>\n                {allProjects &&\n                  allProjects.map((project) => (\n                    <option key={project.projectId} value={project.projectId}>\n                      {project.name}\n                    </option>\n                  ))}\n              </select>\n\n              <select ref={gatewayRef} className=\"mr-2 dropdownheader\">\n                <option value=\"\">All gateways</option>\n                {allGateways &&\n                  allGateways.map((gateway) => (\n                    <option key={gateway.gatewayId} value={gateway.gatewayId}>\n                      {gateway.name}\n                    </option>\n                  ))}\n              </select>\n\n              <input type=\"date\" placeholder=\"from date\" ref={fromDateRef} className=\"mr-2 buttonheader\" />\n\n              <input type=\"date\" placeholder=\"to date\" ref={toDateRef} className=\"mr-2 buttonheader\"/>\n\n              <button className=\"mr-2 generatebtn\">Generate report</button>\n            </form>\n\n            {/* <Dropdown toggle={function noRefCheck() {}} className=\"mr-2 dropdownheader\">\n              <DropdownToggle caret>Select project</DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Header</DropdownItem>\n                <DropdownItem>Some Action</DropdownItem>\n                <DropdownItem text>Dropdown Item Text</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n\n            <Dropdown toggle={function noRefCheck() {}} className=\"mr-2 dropdownheader\">\n              <DropdownToggle caret>Select gateway</DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Header</DropdownItem>\n                <DropdownItem>Some Action</DropdownItem>\n                <DropdownItem text>Dropdown Item Text</DropdownItem>\n              </DropdownMenu>\n            </Dropdown>\n\n            <Button className=\"mr-2 buttonheader\">From date</Button>\n\n            <Button className=\"mr-2 buttonheader\">to date</Button>\n            <Button className=\"mr-2 generatebtn\">Generate Report</Button> */}\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default ReportsHeader;\n"]},"metadata":{},"sourceType":"module"}